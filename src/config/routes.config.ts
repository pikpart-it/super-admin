import DashboardIcon from "@mui/icons-material/Dashboard";
import { lazy } from "react";
import {
  FaBusinessTime,
  FaList,
  FaListUl,
  FaPlus,
  FaUpload,
} from "react-icons/fa";
import { lazily } from "react-lazily";
import { userRole } from "../utility/func";
import { returnLandingPage } from "../utility/roles";
import { userRoles } from "./constants/userRoles";

const Logout = lazy(() => import("../modules/Auth/containers/Logout"));
const Dashboard = lazy(() => import("../modules/Dashboard"));
const CreateUsers = lazy(() => import("../modules/CreateUsers/CreateUsers"));
const ListUsers = lazy(() => import("../modules/CreateUsers/ListUsers"));
const {
  AddBusinessUnit,
  ListBusinessUnit,
  Productlisting,
  NewPmDashboard,
  MainOrders,
  CartMoreInfo,
  UpdateShipmentInfo,
  SchedulePickup,
  AddScheme,
  AddGifts,
  ListScheme,
  ListOffers,
  CreateOffers,
  ListGifts,
  Racks,
} = lazily(() => import("../modules/ProductManufacturer"));

const {
  CreateRoleMaster,
  RoleMasterList,
  AppRoleMasterSetup,
  AppRoleMasterSetupList,
  CreateAppMaster,
  ListAppMaster,
  CreateAppModuleMaster,
  AddRankCreateAppMaster,
  ListAppModuleMaster,
  CreateModulePageMaster,
  ListModulePageMaster,
  CreateMasterConfiguration,
  ListMasterConfiguration,
  CreateModule,
  ListModules,
} = lazily(() => import("../modules/PageSetup"));
export const RoutesPath = {
  NewLoginPage: "/",
  Dashboard: "/dashboard",
  RegisterUser: "/register",
  ListUsers: "/users-list",
  NewPmDashboard: "/pmdashboard",
  Logout: "/logout",
  AddBusinessUnit: "/product-manufacturer/add-bu",
  ListBusinessUnit: "/product-manufacturer/list-bu",
  Productlisting: "/product-manufacturer-productslist",
  MainOrders: "/product-manufacturer-orders",
  CartMoreInfo: "/cart-more-info",
  UpdateShipmentInfo: "/order-shipment-update",
  SchedulePickup: "/schudled-pickup",
  AddScheme: "/add-scheme-product-manufacturer",
  AddGifts: "/add-scheme-gifts",
  ListScheme: "/listScheme",
  ListOffers: "/ListOffers",
  CreateOffers: "/create-offers",
  ListGifts: "/list-scheme-gifts",
  Racks: "/racks",

  // setup routes

  CreateRoleMaster: "/create-role-master",
  RoleMasterList: "/role-master-list",
  CreateAppMaster: "/create-app-master",
  ListAppMaster: "/list-app-master",
  AppRoleMasterSetup: "/app-role-master-setup",
  AppRoleMasterSetupList: "/app-role-master-setup-list",
  CreateAppModuleMaster: "/app-module-master",
  AddRankCreateAppMaster: "/app-create-rank",
  ListAppModuleMaster: "/app-module-master-list",
  CreateModulePageMaster: "/module-page-master-create",
  ListModulePageMaster: "/module-page-master-list",
  CreateMasterConfiguration: "/master-config-create",
  ListMasterConfiguration: "/master-config-list",
  CreateModule: "/module-master-create",
  ListModules: "/module-master-list",
};

export const routesConfig: any = [
  {
    authenticated: true,
    bLabel: "Dashboard",
    children: undefined,
    component: Dashboard,
    exact: true,
    icon: undefined,
    key: "Dashboard",
    pageTitle: "Dashboard",
    label: "",
    layout: ["header", "sidebar"],
    userAllowed: [userRoles.ProductManufacturer, userRoles.MasterSeller],
    link: RoutesPath.Dashboard,
    path: RoutesPath.Dashboard,
  },

  {
    authenticated: true,
    bLabel: "NewPmDashboard",
    children: undefined,
    component: NewPmDashboard,
    exact: true,
    icon: DashboardIcon,
    key: "NewPmDashboard",
    pageTitle: "NewPmDashboard",
    label: "New Dashboard",
    layout: ["header", "sidebar"],
    userAllowed: [userRoles.ProductManufacturer, userRoles.MasterSeller],
    link: RoutesPath.NewPmDashboard,
    path: RoutesPath.NewPmDashboard,
  },

  {
    authenticated: false,
    bLabel: "NewLogin",
    children: undefined,
    component: returnLandingPage(userRole()),
    exact: true,
    icon: undefined,
    key: "NewLogin",
    pageTitle: "NewLogin",
    label: "",
    layout: userRole() === userRoles.guest ? [] : ["header", "sidebar"],
    userAllowed: [],
    link: RoutesPath.NewLoginPage,
    path: RoutesPath.NewLoginPage,
  },

  {
    authenticated: true,
    bLabel: "",
    children: undefined,
    component: CreateRoleMaster,
    pageTitle: "Create Role Master",
    key: "SuperAdminCreateRoleMaster",
    exact: true,
    icon: FaPlus,
    label: "Create Role Master",
    layout: ["header", "sidebar"],
    userAllowed: [],
    link: RoutesPath.CreateRoleMaster,
    path: RoutesPath.CreateRoleMaster,
  },
  {
    authenticated: true,
    bLabel: "",
    children: undefined,
    component: AddRankCreateAppMaster,
    pageTitle: "Add Rank",
    key: "SuperAdminRanksSetup",
    exact: true,
    icon: FaPlus,
    label: "Add Rank",
    layout: ["header", "sidebar"],
    userAllowed: [],
    link: RoutesPath.AddRankCreateAppMaster,
    path: RoutesPath.AddRankCreateAppMaster,
  },
  {
    authenticated: true,
    bLabel: "",
    children: undefined,
    component: CreateAppMaster,
    pageTitle: "Create App Master",
    key: "SuperAdminCreateAppMaster",
    exact: true,
    icon: FaPlus,
    label: "Create App Master",
    layout: ["header", "sidebar"],
    userAllowed: [],
    link: RoutesPath.CreateAppMaster,
    path: RoutesPath.CreateAppMaster,
  },

  {
    authenticated: true,
    bLabel: "",
    children: undefined,
    component: AppRoleMasterSetup,
    pageTitle: "App Role Master Setup ",
    key: "SuperAdminAppRoleMasterSetup",
    exact: true,
    icon: FaPlus,
    label: "App Role Master Setup",
    layout: ["header", "sidebar"],
    userAllowed: [],
    link: RoutesPath.AppRoleMasterSetup,
    path: RoutesPath.AppRoleMasterSetup,
  },
  {
    authenticated: true,
    bLabel: "",
    children: undefined,
    component: CreateModule,
    pageTitle: "Create Module Master",
    key: "SuperAdminModuleMasterCreate",
    exact: true,
    icon: FaPlus,
    label: "Create Module Master",
    layout: ["header", "sidebar"],
    userAllowed: [],
    link: RoutesPath.CreateModule,
    path: RoutesPath.CreateModule,
  },
  {
    authenticated: true,
    bLabel: "",
    children: undefined,
    component: CreateAppModuleMaster,
    pageTitle: "App Module Master ",
    key: "SuperAdminAppModuleMasterSetup",
    exact: true,
    icon: FaPlus,
    label: "App Module Master ",
    layout: ["header", "sidebar"],
    userAllowed: [],
    link: RoutesPath.CreateAppModuleMaster,
    path: RoutesPath.CreateAppModuleMaster,
  },

  {
    authenticated: true,
    bLabel: "",
    children: undefined,
    component: CreateModulePageMaster,
    pageTitle: "Module Page Master",
    key: "SuperAdminModulePageMasterSetup",
    exact: true,
    icon: FaPlus,
    label: "Module Page Master",
    layout: ["header", "sidebar"],
    userAllowed: [],
    link: RoutesPath.CreateModulePageMaster,
    path: RoutesPath.CreateModulePageMaster,
  },
  {
    authenticated: true,
    bLabel: "Master Configuration",
    children: [
      {
        authenticated: true,
        bLabel: "",
        children: undefined,
        component: CreateMasterConfiguration,
        pageTitle: "Create Master Configuration",
        key: "SuperAdminMasterConfiguration",
        exact: true,
        icon: FaPlus,
        label: "Create Master Configuration",
        layout: ["header", "sidebar"],
        userAllowed: [],
        link: RoutesPath.CreateMasterConfiguration,
        path: RoutesPath.CreateMasterConfiguration,
      },
      {
        authenticated: true,
        bLabel: "",
        children: undefined,
        component: ListMasterConfiguration,
        pageTitle: "List Master Configuration",
        key: "SuperAdminMasterConfigurationList",
        exact: true,
        icon: FaList,
        label: "List Master Configuration",
        layout: ["header", "sidebar"],
        userAllowed: [],
        link: RoutesPath.ListMasterConfiguration,
        path: RoutesPath.ListMasterConfiguration,
      },
    ],

    component: undefined,
    pageTitle: "Master Configuration",
    key: "ModulePageMasterSection",
    exact: true,
    icon: FaBusinessTime,
    label: "Master Configuration",
    layout: [],
    userAllowed: [],
    link: undefined,
    path: undefined,
  },
  {
    authenticated: true,
    bLabel: "Create Users",
    children: [
      {
        authenticated: true,
        bLabel: "CreateUsers",
        children: undefined,
        component: CreateUsers,
        exact: true,
        icon: FaPlus,
        key: "CreateUsers",
        pageTitle: "CreateUsers",
        label: "Create Users",
        layout: ["header", "sidebar"],
        userAllowed: [],
        link: RoutesPath.RegisterUser,
        path: RoutesPath.RegisterUser,
      },
      {
        authenticated: true,
        bLabel: "ListUsers",
        children: undefined,
        component: ListUsers,
        exact: true,
        icon: FaListUl,
        key: "ListUsers",
        pageTitle: "ListUsers",
        label: "List Users",
        layout: ["header", "sidebar"],
        userAllowed: [],
        link: RoutesPath.ListUsers,
        path: RoutesPath.ListUsers,
      },
    ],
    component: undefined,
    pageTitle: "Create Users",
    key: "RegisterUsers",
    exact: true,
    icon: FaBusinessTime,
    label: "Create Users",
    layout: [],
    userAllowed: [],
    link: undefined,
    path: undefined,
  },
  {
    authenticated: true,
    bLabel: "",
    children: undefined,
    component: Logout,
    pageTitle: "Log-out",
    key: "Logout",
    exact: true,
    icon: FaUpload,
    label: "Logout",
    layout: [],
    userAllowed: [],
    link: RoutesPath.Logout,
    path: RoutesPath.Logout,
  },
];
